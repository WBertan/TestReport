apply plugin: 'jacoco'

def coverageOutputDir = "$buildDir/coverageReport"

jacoco {
    toolVersion = "0.8.6"
    reportsDir = file(coverageOutputDir)
}

ext {
    commonCoverageSourceDirs = { project ->
        return [
                "${project.projectDir}/src/main/java",
                "${project.projectDir}/src/main/kotlin"
        ]
    }
    commonFileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/*_ViewBinding*.*',
            '**/*$inlined$*.*',
            '**/*$Parcelable*.*',
            'android/**/*.*'
    ]
    commonJavaClasses = { project ->
        return fileTree(
                dir: "${project.buildDir}/intermediates/javac/debug",
                excludes: commonFileFilter
        )
    }
    commonKotlinClasses = { project ->
        return fileTree(
                dir: "${project.buildDir}/tmp/kotlin-classes/debug",
                excludes: commonFileFilter
        )
    }
    commonExecutionData = { project ->
        fileTree(dir: "${project.buildDir}", includes: [
                "jacoco/testDebugUnitTest.exec",
                "outputs/code_coverage/debugAndroidTest/connected/*coverage.ec"
        ])
    }
}